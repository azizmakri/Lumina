// <auto-generated />
using System;
using LuminaApp.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LuminaApp.Infrastructure.Migrations
{
    [DbContext(typeof(LuminaAppContext))]
    [Migration("20240704094726_status notif")]
    partial class statusnotif
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LuminaApp.Domain.Entities.Attendance", b =>
                {
                    b.Property<int>("AttendanceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AttendanceId"));

                    b.Property<string>("Observation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SessionFK")
                        .HasColumnType("int");

                    b.Property<string>("StudentFK")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("attendanceType")
                        .HasColumnType("int");

                    b.HasKey("AttendanceId");

                    b.HasIndex("SessionFK");

                    b.HasIndex("StudentFK");

                    b.ToTable("Attendances");
                });

            modelBuilder.Entity("LuminaApp.Domain.Entities.ClassRoom", b =>
                {
                    b.Property<int>("ClassroomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClassroomId"));

                    b.Property<string>("ClassroomName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("employeeFk")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ClassroomId");

                    b.HasIndex("employeeFk");

                    b.ToTable("ClassRooms");
                });

            modelBuilder.Entity("LuminaApp.Domain.Entities.DocumentEntity", b =>
                {
                    b.Property<int>("DocumentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DocumentId"));

                    b.Property<DateTime>("Creation_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("DocumentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocumentPath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("folderFK")
                        .HasColumnType("int");

                    b.Property<string>("studentFK")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("teacherFK")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("DocumentId");

                    b.HasIndex("folderFK");

                    b.HasIndex("studentFK");

                    b.HasIndex("teacherFK");

                    b.ToTable("Documents");
                });

            modelBuilder.Entity("LuminaApp.Domain.Entities.Equipment", b =>
                {
                    b.Property<int>("EquipmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EquipmentId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int?>("classRoomFK")
                        .HasColumnType("int");

                    b.HasKey("EquipmentId");

                    b.HasIndex("classRoomFK");

                    b.ToTable("Equipments");
                });

            modelBuilder.Entity("LuminaApp.Domain.Entities.Evaluation", b =>
                {
                    b.Property<int>("EvaluationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EvaluationId"));

                    b.Property<float?>("Mark")
                        .HasColumnType("real");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("evaluationType")
                        .HasColumnType("int");

                    b.Property<int?>("rating")
                        .HasColumnType("int");

                    b.Property<int?>("sessionFk")
                        .HasColumnType("int");

                    b.Property<string>("studentFk")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("EvaluationId");

                    b.HasIndex("sessionFk");

                    b.HasIndex("studentFk");

                    b.ToTable("Evaluations");
                });

            modelBuilder.Entity("LuminaApp.Domain.Entities.Folder", b =>
                {
                    b.Property<int>("FolderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FolderId"));

                    b.Property<DateTime>("Creation_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("FolderName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GradeFK")
                        .HasColumnType("int");

                    b.Property<DateTime>("Modification_Date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ParenFolderFK")
                        .HasColumnType("int");

                    b.Property<string>("TeacherFK")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("folderType")
                        .HasColumnType("int");

                    b.HasKey("FolderId");

                    b.HasIndex("GradeFK");

                    b.HasIndex("ParenFolderFK");

                    b.HasIndex("TeacherFK");

                    b.ToTable("Folders");
                });

            modelBuilder.Entity("LuminaApp.Domain.Entities.Grade", b =>
                {
                    b.Property<int>("GradeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GradeId"));

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GradeId");

                    b.ToTable("Grades");
                });

            modelBuilder.Entity("LuminaApp.Domain.Entities.History", b =>
                {
                    b.Property<int>("HistoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HistoryId"));

                    b.Property<DateTime>("HistoryDate")
                        .HasColumnType("datetime2");

                    b.HasKey("HistoryId");

                    b.ToTable("Histories");
                });

            modelBuilder.Entity("LuminaApp.Domain.Entities.NotificationEntity", b =>
                {
                    b.Property<int>("NotificationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NotificationId"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<int>("newsFk")
                        .HasColumnType("int");

                    b.Property<bool>("read")
                        .HasColumnType("bit");

                    b.HasKey("NotificationId");

                    b.HasIndex("newsFk")
                        .IsUnique();

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("LuminaApp.Domain.Entities.SchoolNews", b =>
                {
                    b.Property<int>("NewsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NewsId"));

                    b.Property<DateTime>("NewsDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NewsPath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SchoolFk")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("NewsId");

                    b.HasIndex("SchoolFk");

                    b.ToTable("SchoolNews");
                });

            modelBuilder.Entity("LuminaApp.Domain.Entities.Session", b =>
                {
                    b.Property<int>("SessionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SessionId"));

                    b.Property<int?>("ClassRoomFK")
                        .HasColumnType("int");

                    b.Property<int?>("SubjectFK")
                        .HasColumnType("int");

                    b.Property<DateTime>("end_hour")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("start_hour")
                        .HasColumnType("datetime2");

                    b.HasKey("SessionId");

                    b.HasIndex("ClassRoomFK");

                    b.HasIndex("SubjectFK");

                    b.ToTable("Sessions");
                });

            modelBuilder.Entity("LuminaApp.Domain.Entities.Subject", b =>
                {
                    b.Property<int>("subjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("subjectId"));

                    b.Property<string>("SubjectName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("coefficient")
                        .HasColumnType("real");

                    b.Property<int>("gradeFK")
                        .HasColumnType("int");

                    b.Property<string>("teacherFK")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("subjectId");

                    b.HasIndex("gradeFK");

                    b.HasIndex("teacherFK");

                    b.ToTable("Subjects");
                });

            modelBuilder.Entity("LuminaApp.Domain.Entities.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("ParentFK")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int?>("gradeFK")
                        .HasColumnType("int");

                    b.Property<int?>("historyFK")
                        .HasColumnType("int");

                    b.Property<int?>("subjectFK")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.HasIndex("ParentFK");

                    b.HasIndex("gradeFK");

                    b.HasIndex("historyFK")
                        .IsUnique()
                        .HasFilter("[historyFK] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("LuminaApp.Domain.Entities.Attendance", b =>
                {
                    b.HasOne("LuminaApp.Domain.Entities.Session", "session")
                        .WithMany("attendance")
                        .HasForeignKey("SessionFK")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("LuminaApp.Domain.Entities.User", "Student")
                        .WithMany("Attendances")
                        .HasForeignKey("StudentFK")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Student");

                    b.Navigation("session");
                });

            modelBuilder.Entity("LuminaApp.Domain.Entities.ClassRoom", b =>
                {
                    b.HasOne("LuminaApp.Domain.Entities.User", "employee")
                        .WithMany("ClassRooms")
                        .HasForeignKey("employeeFk")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("employee");
                });

            modelBuilder.Entity("LuminaApp.Domain.Entities.DocumentEntity", b =>
                {
                    b.HasOne("LuminaApp.Domain.Entities.Folder", "folder")
                        .WithMany("Documents")
                        .HasForeignKey("folderFK")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("LuminaApp.Domain.Entities.User", "student")
                        .WithMany("studentDocuments")
                        .HasForeignKey("studentFK")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("LuminaApp.Domain.Entities.User", "teacher")
                        .WithMany("teacherDocuments")
                        .HasForeignKey("teacherFK")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("folder");

                    b.Navigation("student");

                    b.Navigation("teacher");
                });

            modelBuilder.Entity("LuminaApp.Domain.Entities.Equipment", b =>
                {
                    b.HasOne("LuminaApp.Domain.Entities.ClassRoom", "classRoom")
                        .WithMany("equipments")
                        .HasForeignKey("classRoomFK");

                    b.Navigation("classRoom");
                });

            modelBuilder.Entity("LuminaApp.Domain.Entities.Evaluation", b =>
                {
                    b.HasOne("LuminaApp.Domain.Entities.Session", "session")
                        .WithMany("evaluations")
                        .HasForeignKey("sessionFk")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("LuminaApp.Domain.Entities.User", "student")
                        .WithMany("evaluations")
                        .HasForeignKey("studentFk");

                    b.Navigation("session");

                    b.Navigation("student");
                });

            modelBuilder.Entity("LuminaApp.Domain.Entities.Folder", b =>
                {
                    b.HasOne("LuminaApp.Domain.Entities.Grade", "grade")
                        .WithMany("Folders")
                        .HasForeignKey("GradeFK")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("LuminaApp.Domain.Entities.Folder", "ParentFolder")
                        .WithMany("Folders")
                        .HasForeignKey("ParenFolderFK")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("LuminaApp.Domain.Entities.User", "Teacher")
                        .WithMany("Folders")
                        .HasForeignKey("TeacherFK")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("ParentFolder");

                    b.Navigation("Teacher");

                    b.Navigation("grade");
                });

            modelBuilder.Entity("LuminaApp.Domain.Entities.NotificationEntity", b =>
                {
                    b.HasOne("LuminaApp.Domain.Entities.SchoolNews", "schoolnews")
                        .WithOne("notification")
                        .HasForeignKey("LuminaApp.Domain.Entities.NotificationEntity", "newsFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("schoolnews");
                });

            modelBuilder.Entity("LuminaApp.Domain.Entities.SchoolNews", b =>
                {
                    b.HasOne("LuminaApp.Domain.Entities.User", "School")
                        .WithMany("News")
                        .HasForeignKey("SchoolFk")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("School");
                });

            modelBuilder.Entity("LuminaApp.Domain.Entities.Session", b =>
                {
                    b.HasOne("LuminaApp.Domain.Entities.ClassRoom", "ClassRoom")
                        .WithMany("Session")
                        .HasForeignKey("ClassRoomFK")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("LuminaApp.Domain.Entities.Subject", "subject")
                        .WithMany("sessions")
                        .HasForeignKey("SubjectFK")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("ClassRoom");

                    b.Navigation("subject");
                });

            modelBuilder.Entity("LuminaApp.Domain.Entities.Subject", b =>
                {
                    b.HasOne("LuminaApp.Domain.Entities.Grade", "grade")
                        .WithMany("subjects")
                        .HasForeignKey("gradeFK")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("LuminaApp.Domain.Entities.User", "teacher")
                        .WithMany("subjects")
                        .HasForeignKey("teacherFK")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("grade");

                    b.Navigation("teacher");
                });

            modelBuilder.Entity("LuminaApp.Domain.Entities.User", b =>
                {
                    b.HasOne("LuminaApp.Domain.Entities.User", "Parent")
                        .WithMany("Students")
                        .HasForeignKey("ParentFK")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("LuminaApp.Domain.Entities.Grade", "grade")
                        .WithMany("students")
                        .HasForeignKey("gradeFK")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("LuminaApp.Domain.Entities.History", "history")
                        .WithOne("user")
                        .HasForeignKey("LuminaApp.Domain.Entities.User", "historyFK");

                    b.Navigation("Parent");

                    b.Navigation("grade");

                    b.Navigation("history");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("LuminaApp.Domain.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("LuminaApp.Domain.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LuminaApp.Domain.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("LuminaApp.Domain.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LuminaApp.Domain.Entities.ClassRoom", b =>
                {
                    b.Navigation("Session");

                    b.Navigation("equipments");
                });

            modelBuilder.Entity("LuminaApp.Domain.Entities.Folder", b =>
                {
                    b.Navigation("Documents");

                    b.Navigation("Folders");
                });

            modelBuilder.Entity("LuminaApp.Domain.Entities.Grade", b =>
                {
                    b.Navigation("Folders");

                    b.Navigation("students");

                    b.Navigation("subjects");
                });

            modelBuilder.Entity("LuminaApp.Domain.Entities.History", b =>
                {
                    b.Navigation("user");
                });

            modelBuilder.Entity("LuminaApp.Domain.Entities.SchoolNews", b =>
                {
                    b.Navigation("notification")
                        .IsRequired();
                });

            modelBuilder.Entity("LuminaApp.Domain.Entities.Session", b =>
                {
                    b.Navigation("attendance");

                    b.Navigation("evaluations");
                });

            modelBuilder.Entity("LuminaApp.Domain.Entities.Subject", b =>
                {
                    b.Navigation("sessions");
                });

            modelBuilder.Entity("LuminaApp.Domain.Entities.User", b =>
                {
                    b.Navigation("Attendances");

                    b.Navigation("ClassRooms");

                    b.Navigation("Folders");

                    b.Navigation("News");

                    b.Navigation("Students");

                    b.Navigation("evaluations");

                    b.Navigation("studentDocuments");

                    b.Navigation("subjects");

                    b.Navigation("teacherDocuments");
                });
#pragma warning restore 612, 618
        }
    }
}
